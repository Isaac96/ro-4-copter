#summary All about the firmware for the AVR based flight controller

The source code for the flight controller's firmware is stored [http://code.google.com/p/ro-4-copter/source/browse/#svn/trunk/ here] under flight_ctrl.

== ATmega644P ==

AVR microcontrollers are chosen because they are cheap and they have free open source development tools available for use.

The ATmega644P is the most powerful AVR chip that comes in a DIP format so it can be used on a breadboard. It also features two USART modules.

== Test Functions ==

Several test functions are written to individual software and hardware modules.

== Sensors and ADC ==

The ADC is running at its lowest possible speed. Sensor readings are continuously taken and stored in an array.

The gyro sensors are calibrated by taking their average readings during the start-up sequence, the helicopter must be kept still during the calibration process.

== Timer 1 ==

Timer 1 is the only 16 bit timer available on the ATmega644P. It is kept running without a prescaler, and TCNT1 is never modified. This ensures precise timing to within +/- 50 nanoseconds.

== Timer 0 ==

Timer 0 is kept always running, with a frequency that is the system clock divided by 1024. It is used to keep count of loop times, which is gives a value for delta time used in the complementary filter.

== PPM Radio Input ==

PPM signals are measured using timer 1's input capture module. The input capture interrupt is used to store each PPM channel's pulse width into an array. The measurement is accurate even if the interrupt occurs slightly late since the ICP register is the one keeping the measurement, not TCNT1.

The average "center" pulse width of each PPM channel is taken during the start-up sequence. The user should not touch the radio during this sequence.